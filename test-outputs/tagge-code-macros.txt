Command line args: clojush.problems.synthetic.codesize20 :use-single-thread true :max-generations 5 :population-size 5 :csv-log-filename "xxx" :edn-log-filename "xxx" :json-log-filename "xxx"
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
atom-generators = (#object[xxx] #object[xxx] #object[xxx] #object[xxx] #object[xxx])
csv-log-filename = xxx
edn-log-filename = xxx
error-function = #object[xxx]
json-log-filename = xxx
max-generations = 5
population-size = 5
tag-limit = 1000
use-single-thread = true
######################################
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_two_point_crossover genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = xxx
Hash of last Git commit = xxx
GitHub link = xxx
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 10
alternation-rate = 0.01
atom-generators = (#object[xxx] #object[xxx] #object[xxx] #object[xxx] #object[xxx])
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = xxx
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = xxx
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[xxx]
error-threshold = 0
evalpush-limit = 150
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 1000
genetic-operator-probabilities = {:uniform-boolean-mutation 0.0, :uniform-addition 0.0, :uniform-combination-and-deletion 0.0, :uniform-addition-and-deletion 0.0, :reproduction 0.0, :uniform-tag-mutation 0.0, :uniform-deletion 0.0, :uniform-close-mutation 0.0, :alternation 0.7, :uniform-string-mutation 0.0, [:make-next-operator-revertable :uniform-silence-mutation] 0.0, :uniform-float-mutation 0.0, [:alternation :uniform-mutation] 0.2, :uniform-crossover 0.0, :uniform-mutation 0.1, :uniform-integer-mutation 0.0, :genesis 0.0, :two-point-crossover 0.0, :uniform-silence-mutation 0.0, :autoconstruction 0.0, :uniform-instruction-mutation 0.0}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = xxx
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1000
max-generations = 5
max-genome-size-in-initial-program = 50
max-point-evaluations = 1.0E101
max-points = 200
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
pop-when-tagging = true
population-size = 5
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = false
problem-specific-initial-report = #object[xxx]
problem-specific-report = #object[xxx]
random-screen = false
random-seed = 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
random-threshold-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 100
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 1000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = true

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)}} {:close 1, :instruction tagged_445} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)}} {:close 1, :instruction tagged_19} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)}} {:close 0, :instruction tag_exec_553} {:close 0, :instruction tagged_210} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}} {:close 0, :instruction tag_exec_848} {:close 1, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)}} {:close 0, :instruction tagged_601} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)}})
Lexicase best program: ({:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)} {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)} tagged_445 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)} tagged_19 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)} tag_exec_553 (tagged_210 {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}) tag_exec_848 ({:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}) {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)} {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)} tagged_601 {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)})
Lexicase best partial simplification: (tag_exec_848 ({:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}) {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)})
Lexicase best errors: [15 0]
Lexicase best number of elite cases: 2
Lexicase best total error: 15
Lexicase best mean error: 7.5
Lexicase best size: 35
Percent parens: 0.086
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (758 470 410), :additional_args (), :result_tags (679)}} {:close 0, :instruction tagged_265} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (810)}} {:close 1, :instruction tagged_81} {:close 1, :instruction tagged_38})
Zero cases best program: ({:tagged_code_macro true, :instruction code_subst, :argument_tags (758 470 410), :additional_args (), :result_tags (679)} tagged_265 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (810)} tagged_81 tagged_38)
Zero cases best partial simplification: ()
Zero cases best errors: [1000000 0]
Zero cases best number of elite cases: 1
Zero cases best number of zero cases: 1
Zero cases best total error: 1000000
Zero cases best mean error: 500000.0
Zero cases best size: 6
Percent parens: 0.167
--- Lexicase Population Statistics ---
Count of elite individuals by case: (2 5)
Population mean number of elite cases: 1.40
Count of perfect (error zero) individuals by case: (0 5)
Population mean number of perfect (error zero) cases: 1.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (768 659), :additional_args (), :result_tags (688)}} {:close 0, :instruction tag_exec_242} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (142), :additional_args (), :result_tags (780)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (975 407), :additional_args (), :result_tags (947)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (361 976 330), :additional_args (), :result_tags (991)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (464 812), :additional_args (), :result_tags (748)}} {:close 0, :instruction tagged_586} {:close 0, :instruction tag_exec_394} {:close 1, :instruction tagged_91} {:close 0, :instruction tag_exec_271} {:close 0, :instruction tag_exec_431} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (560 173), :additional_args (), :result_tags (269)}} {:close 0, :instruction tagged_478} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (675 170), :additional_args (), :result_tags (887)}})
Best program: ({:tagged_code_macro true, :instruction code_append, :argument_tags (768 659), :additional_args (), :result_tags (688)} tag_exec_242 ({:tagged_code_macro true, :instruction code_wrap, :argument_tags (142), :additional_args (), :result_tags (780)} {:tagged_code_macro true, :instruction code_append, :argument_tags (975 407), :additional_args (), :result_tags (947)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (361 976 330), :additional_args (), :result_tags (991)} {:tagged_code_macro true, :instruction code_append, :argument_tags (464 812), :additional_args (), :result_tags (748)}) tagged_586 tag_exec_394 (tagged_91) tag_exec_271 (tag_exec_431 ({:tagged_code_macro true, :instruction code_append, :argument_tags (560 173), :additional_args (), :result_tags (269)} tagged_478 {:tagged_code_macro true, :instruction code_append, :argument_tags (675 170), :additional_args (), :result_tags (887)})))
Partial simplification: (tag_exec_242 ({:tagged_code_macro true, :instruction code_wrap, :argument_tags (142), :additional_args (), :result_tags (780)} {:tagged_code_macro true, :instruction code_append, :argument_tags (975 407), :additional_args (), :result_tags (947)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (361 976 330), :additional_args (), :result_tags (991)} {:tagged_code_macro true, :instruction code_append, :argument_tags (464 812), :additional_args (), :result_tags (748)}))
Errors: [15 0]
Total: 15
Mean: 7.5
Genome size: 14
Size: 19
Percent parens: 0.263
--- Population Statistics ---
Average total errors in population: 200013.2
Median total errors in population: 17
Error averages by case: (200013.2 0.0)
Error minima by case: (15 0)
Average genome size in population (length): 25.8
Average program size in population (points): 31.4
Average percent parens in population: 0.180
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.8
Error (vector) diversity:			 0.8
--- Run Statistics ---
Number of program evaluations used so far: 5
Number of point (instruction) evaluations so far: 271
--- Timings ---
Current time: 1xxx milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)}} {:close 1, :instruction tagged_445} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)}} {:close 1, :instruction tagged_19} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)}} {:close 0, :instruction tag_exec_553} {:close 0, :instruction tagged_210} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}} {:close 0, :instruction tag_exec_848} {:close 1, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)}} {:close 0, :instruction tagged_601} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)}})
Lexicase best program: ({:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)} {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)} tagged_445 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)} tagged_19 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)} tag_exec_553 (tagged_210 {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}) tag_exec_848 ({:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}) {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)} {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)} tagged_601 {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)})
Lexicase best partial simplification: (tag_exec_553 (tagged_210 {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}) {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)})
Lexicase best errors: [15 0]
Lexicase best number of elite cases: 2
Lexicase best total error: 15
Lexicase best mean error: 7.5
Lexicase best size: 35
Percent parens: 0.086
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)}} {:close 1, :instruction tagged_445} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)}} {:close 1, :instruction tagged_19} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)}} {:close 0, :instruction tag_exec_553} {:close 0, :instruction tagged_210} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}} {:close 0, :instruction tag_exec_848} {:close 1, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)}} {:close 0, :instruction tagged_601} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)}})
Zero cases best program: ({:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)} {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)} tagged_445 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)} tagged_19 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)} tag_exec_553 (tagged_210 {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}) tag_exec_848 ({:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}) {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)} {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)} tagged_601 {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)})
Zero cases best partial simplification: (tag_exec_553 ({:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}) {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)})
Zero cases best errors: [15 0]
Zero cases best number of elite cases: 2
Zero cases best number of zero cases: 1
Zero cases best total error: 15
Zero cases best mean error: 7.5
Zero cases best size: 35
Percent parens: 0.086
--- Lexicase Population Statistics ---
Count of elite individuals by case: (5 5)
Population mean number of elite cases: 2.00
Count of perfect (error zero) individuals by case: (0 5)
Population mean number of perfect (error zero) cases: 1.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)}} {:close 1, :instruction tagged_445} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)}} {:close 1, :instruction tagged_19} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)}} {:close 0, :instruction tag_exec_553} {:close 0, :instruction tagged_210} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}} {:close 0, :instruction tag_exec_848} {:close 1, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)}} {:close 0, :instruction tagged_601} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)}})
Best program: ({:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)} {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)} tagged_445 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)} tagged_19 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)} tag_exec_553 (tagged_210 {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}) tag_exec_848 ({:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}) {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)} {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)} tagged_601 {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)})
Partial simplification: (tag_exec_553 (tagged_210 {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)}) {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)})
Errors: [15 0]
Total: 15
Mean: 7.5
Genome size: 32
Size: 35
Percent parens: 0.086
--- Population Statistics ---
Average total errors in population: 15.0
Median total errors in population: 15
Error averages by case: (15.0 0.0)
Error minima by case: (15 0)
Average genome size in population (length): 28.4
Average program size in population (points): 31.8
Average percent parens in population: 0.121
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.2
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 5/2
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.4
Min copy number of one Push program: 1
Median copy number of one Push program: 5/2
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.4
Total error diversity:				 0.2
Error (vector) diversity:			 0.2
--- Run Statistics ---
Number of program evaluations used so far: 10
Number of point (instruction) evaluations so far: 708
--- Timings ---
Current time: 1xxx milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)}} {:close 1, :instruction tagged_445} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)}} {:close 1, :instruction tagged_19} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)}} {:close 0, :instruction tag_exec_553} {:close 0, :instruction tagged_210} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}} {:close 0, :instruction tag_exec_848} {:close 1, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)}} {:close 0, :instruction tagged_601} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)}})
Lexicase best program: ({:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)} {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)} tagged_445 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)} tagged_19 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)} tag_exec_553 (tagged_210 {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}) tag_exec_848 ({:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}) {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)} {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)} tagged_601 {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)})
Lexicase best partial simplification: (tag_exec_553 (tagged_210 {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}) {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)})
Lexicase best errors: [15 0]
Lexicase best number of elite cases: 2
Lexicase best total error: 15
Lexicase best mean error: 7.5
Lexicase best size: 35
Percent parens: 0.086
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)}} {:close 1, :instruction tagged_445} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)}} {:close 1, :instruction tagged_19} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)}} {:close 0, :instruction tag_exec_553} {:close 0, :instruction tagged_210} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}} {:close 0, :instruction tag_exec_848} {:close 1, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)}} {:close 0, :instruction tagged_601} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)}})
Zero cases best program: ({:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)} {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)} tagged_445 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)} tagged_19 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)} tag_exec_553 (tagged_210 {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}) tag_exec_848 ({:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}) {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)} {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)} tagged_601 {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)})
Zero cases best partial simplification: (tag_exec_553 (tagged_210 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}) {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)})
Zero cases best errors: [15 0]
Zero cases best number of elite cases: 2
Zero cases best number of zero cases: 1
Zero cases best total error: 15
Zero cases best mean error: 7.5
Zero cases best size: 35
Percent parens: 0.086
--- Lexicase Population Statistics ---
Count of elite individuals by case: (5 5)
Population mean number of elite cases: 2.00
Count of perfect (error zero) individuals by case: (0 5)
Population mean number of perfect (error zero) cases: 1.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (768 659), :additional_args (), :result_tags (688)}} {:close 0, :instruction tag_exec_242} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (142), :additional_args (), :result_tags (780)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (975 407), :additional_args (), :result_tags (947)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (361 976 330), :additional_args (), :result_tags (991)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (464 812), :additional_args (), :result_tags (748)}} {:close 0, :instruction tagged_586} {:close 0, :instruction tag_exec_394} {:close 1, :instruction tagged_91} {:close 0, :instruction tag_exec_271} {:close 0, :instruction tag_exec_431} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (560 173), :additional_args (), :result_tags (269)}} {:close 0, :instruction tagged_478} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (675 170), :additional_args (), :result_tags (887)}})
Best program: ({:tagged_code_macro true, :instruction code_append, :argument_tags (768 659), :additional_args (), :result_tags (688)} tag_exec_242 ({:tagged_code_macro true, :instruction code_wrap, :argument_tags (142), :additional_args (), :result_tags (780)} {:tagged_code_macro true, :instruction code_append, :argument_tags (975 407), :additional_args (), :result_tags (947)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (361 976 330), :additional_args (), :result_tags (991)} {:tagged_code_macro true, :instruction code_append, :argument_tags (464 812), :additional_args (), :result_tags (748)}) tagged_586 tag_exec_394 (tagged_91) tag_exec_271 (tag_exec_431 ({:tagged_code_macro true, :instruction code_append, :argument_tags (560 173), :additional_args (), :result_tags (269)} tagged_478 {:tagged_code_macro true, :instruction code_append, :argument_tags (675 170), :additional_args (), :result_tags (887)})))
Partial simplification: (tag_exec_242 ({:tagged_code_macro true, :instruction code_wrap, :argument_tags (142), :additional_args (), :result_tags (780)} {:tagged_code_macro true, :instruction code_append, :argument_tags (975 407), :additional_args (), :result_tags (947)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (361 976 330), :additional_args (), :result_tags (991)} {:tagged_code_macro true, :instruction code_append, :argument_tags (464 812), :additional_args (), :result_tags (748)}))
Errors: [15 0]
Total: 15
Mean: 7.5
Genome size: 14
Size: 19
Percent parens: 0.263
--- Population Statistics ---
Average total errors in population: 15.0
Median total errors in population: 15
Error averages by case: (15.0 0.0)
Error minima by case: (15 0)
Average genome size in population (length): 24.8
Average program size in population (points): 28.6
Average percent parens in population: 0.157
Minimum age in population: 2.0
Maximum age in population: 3.0
Average age in population: 2.3
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 2
Median copy number of one Plush genome: 5/2
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.4
Min copy number of one Push program: 2
Median copy number of one Push program: 5/2
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.4
Total error diversity:				 0.2
Error (vector) diversity:			 0.2
--- Run Statistics ---
Number of program evaluations used so far: 15
Number of point (instruction) evaluations so far: 1067
--- Timings ---
Current time: 1xxx milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)}} {:close 1, :instruction tagged_445} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)}} {:close 1, :instruction tagged_19} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)}} {:close 0, :instruction tag_exec_553} {:close 0, :instruction tagged_210} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}} {:close 0, :instruction tag_exec_848} {:close 1, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)}} {:close 0, :instruction tagged_601} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)}})
Lexicase best program: ({:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)} {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)} tagged_445 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)} tagged_19 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)} tag_exec_553 (tagged_210 {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}) tag_exec_848 ({:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}) {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)} {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)} tagged_601 {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)})
Lexicase best partial simplification: (tag_exec_553 (tagged_210 {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}) {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)})
Lexicase best errors: [15 0]
Lexicase best number of elite cases: 2
Lexicase best total error: 15
Lexicase best mean error: 7.5
Lexicase best size: 35
Percent parens: 0.086
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)}} {:close 1, :instruction tagged_445} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)}} {:close 1, :instruction tagged_19} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)}} {:close 0, :instruction tag_exec_553} {:close 0, :instruction tagged_210} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}} {:close 0, :instruction tag_exec_848} {:close 1, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)}} {:close 0, :instruction tagged_601} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)}})
Zero cases best program: ({:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)} {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)} tagged_445 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)} tagged_19 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)} tag_exec_553 (tagged_210 {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}) tag_exec_848 ({:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}) {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)} {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)} tagged_601 {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)})
Zero cases best partial simplification: (tag_exec_848 {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)})
Zero cases best errors: [15 0]
Zero cases best number of elite cases: 2
Zero cases best number of zero cases: 1
Zero cases best total error: 15
Zero cases best mean error: 7.5
Zero cases best size: 35
Percent parens: 0.086
--- Lexicase Population Statistics ---
Count of elite individuals by case: (5 5)
Population mean number of elite cases: 2.00
Count of perfect (error zero) individuals by case: (0 5)
Population mean number of perfect (error zero) cases: 1.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (768 659), :additional_args (), :result_tags (688)}} {:close 0, :instruction tag_exec_242} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (142), :additional_args (), :result_tags (780)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (975 407), :additional_args (), :result_tags (947)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (361 976 330), :additional_args (), :result_tags (991)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (464 812), :additional_args (), :result_tags (748)}} {:close 0, :instruction tagged_586} {:close 0, :instruction tag_exec_394} {:close 1, :instruction tagged_91} {:close 0, :instruction tag_exec_271} {:close 0, :instruction tag_exec_431} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (560 173), :additional_args (), :result_tags (269)}} {:close 0, :instruction tagged_478} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (675 170), :additional_args (), :result_tags (887)}})
Best program: ({:tagged_code_macro true, :instruction code_append, :argument_tags (768 659), :additional_args (), :result_tags (688)} tag_exec_242 ({:tagged_code_macro true, :instruction code_wrap, :argument_tags (142), :additional_args (), :result_tags (780)} {:tagged_code_macro true, :instruction code_append, :argument_tags (975 407), :additional_args (), :result_tags (947)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (361 976 330), :additional_args (), :result_tags (991)} {:tagged_code_macro true, :instruction code_append, :argument_tags (464 812), :additional_args (), :result_tags (748)}) tagged_586 tag_exec_394 (tagged_91) tag_exec_271 (tag_exec_431 ({:tagged_code_macro true, :instruction code_append, :argument_tags (560 173), :additional_args (), :result_tags (269)} tagged_478 {:tagged_code_macro true, :instruction code_append, :argument_tags (675 170), :additional_args (), :result_tags (887)})))
Partial simplification: (tag_exec_242 ({:tagged_code_macro true, :instruction code_wrap, :argument_tags (142), :additional_args (), :result_tags (780)} {:tagged_code_macro true, :instruction code_append, :argument_tags (975 407), :additional_args (), :result_tags (947)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (361 976 330), :additional_args (), :result_tags (991)} {:tagged_code_macro true, :instruction code_append, :argument_tags (464 812), :additional_args (), :result_tags (748)}) tagged_478)
Errors: [15 0]
Total: 15
Mean: 7.5
Genome size: 14
Size: 19
Percent parens: 0.263
--- Population Statistics ---
Average total errors in population: 15.0
Median total errors in population: 15
Error averages by case: (15.0 0.0)
Error minima by case: (15 0)
Average genome size in population (length): 21.2
Average program size in population (points): 25.4
Average percent parens in population: 0.192
Minimum age in population: 3.0
Maximum age in population: 4.0
Average age in population: 3.45
Median age in population: 3.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.6
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.6
Total error diversity:				 0.2
Error (vector) diversity:			 0.2
--- Run Statistics ---
Number of program evaluations used so far: 20
Number of point (instruction) evaluations so far: 1339
--- Timings ---
Current time: 1xxx milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)}} {:close 1, :instruction tagged_445} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)}} {:close 1, :instruction tagged_19} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)}} {:close 0, :instruction tag_exec_553} {:close 0, :instruction tagged_210} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}} {:close 0, :instruction tag_exec_848} {:close 1, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)}} {:close 0, :instruction tagged_601} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)}})
Lexicase best program: ({:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)} {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)} tagged_445 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)} tagged_19 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)} tag_exec_553 (tagged_210 {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}) tag_exec_848 ({:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}) {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)} {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)} tagged_601 {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)})
Lexicase best partial simplification: (tag_exec_848 ({:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}) {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)})
Lexicase best errors: [15 0]
Lexicase best number of elite cases: 2
Lexicase best total error: 15
Lexicase best mean error: 7.5
Lexicase best size: 35
Percent parens: 0.086
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)}} {:close 1, :instruction tagged_445} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)}} {:close 1, :instruction tagged_19} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)}} {:close 0, :instruction tag_exec_440} {:close 0, :instruction tagged_210} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}} {:close 0, :instruction tag_exec_848} {:close 1, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)}} {:close 1, :instruction tag_exec_230} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)}} {:close 0, :instruction tagged_601} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)}} {:close 0, :instruction tagged_879} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)}})
Zero cases best program: ({:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)} {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)} tagged_445 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)} tagged_19 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)} tag_exec_440 (tagged_210 {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}) tag_exec_848 ({:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}) {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)} {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)} tag_exec_230 () {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)} tagged_601 {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)} tagged_879 {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)})
Zero cases best partial simplification: (tag_exec_230 tagged_601 {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)})
Zero cases best errors: [16 0]
Zero cases best number of elite cases: 1
Zero cases best number of zero cases: 1
Zero cases best total error: 16
Zero cases best mean error: 8.0
Zero cases best size: 36
Percent parens: 0.111
--- Lexicase Population Statistics ---
Count of elite individuals by case: (4 5)
Population mean number of elite cases: 1.80
Count of perfect (error zero) individuals by case: (0 5)
Population mean number of perfect (error zero) cases: 1.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)}} {:close 1, :instruction tagged_445} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)}} {:close 1, :instruction tagged_19} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)}} {:close 0, :instruction tag_exec_440} {:close 0, :instruction tagged_210} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}} {:close 0, :instruction tag_exec_848} {:close 1, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)}} {:close 0, :instruction tagged_601} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)}} {:close 0, :instruction tagged_879} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)}})
Best program: ({:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)} {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)} tagged_445 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)} tagged_19 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)} tag_exec_440 (tagged_210 {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}) tag_exec_848 ({:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}) {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)} {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)} tagged_601 {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)} tagged_879 {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)})
Partial simplification: ({:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)} tag_exec_848 ({:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}) {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)})
Errors: [15 0]
Total: 15
Mean: 7.5
Genome size: 32
Size: 35
Percent parens: 0.086
--- Population Statistics ---
Average total errors in population: 15.2
Median total errors in population: 15
Error averages by case: (15.2 0.0)
Error minima by case: (15 0)
Average genome size in population (length): 24.8
Average program size in population (points): 28.8
Average percent parens in population: 0.162
Minimum age in population: 4.375
Maximum age in population: 5.125
Average age in population: 4.725
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.8
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.8
Total error diversity:				 0.4
Error (vector) diversity:			 0.4
--- Run Statistics ---
Number of program evaluations used so far: 25
Number of point (instruction) evaluations so far: 1677
--- Timings ---
Current time: 1xxx milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (768 659), :additional_args (), :result_tags (688)}} {:close 0, :instruction tag_exec_242} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (142), :additional_args (), :result_tags (780)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (975 407), :additional_args (), :result_tags (947)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)}} {:close 1, :instruction tagged_445} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)}} {:close 1, :instruction tagged_19} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)}} {:close 0, :instruction tag_exec_553} {:close 0, :instruction tagged_210} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}} {:close 0, :instruction tag_exec_848} {:close 1, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)}} {:close 0, :instruction tagged_601} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)}})
Lexicase best program: ({:tagged_code_macro true, :instruction code_append, :argument_tags (768 659), :additional_args (), :result_tags (688)} tag_exec_242 ({:tagged_code_macro true, :instruction code_wrap, :argument_tags (142), :additional_args (), :result_tags (780)} {:tagged_code_macro true, :instruction code_append, :argument_tags (975 407), :additional_args (), :result_tags (947)} {:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)} {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)} tagged_445) {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)} tagged_19 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)} tag_exec_553 (tagged_210 {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}) tag_exec_848 ({:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}) {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)} {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)} tagged_601 {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)})
Lexicase best partial simplification: (tag_exec_242 ({:tagged_code_macro true, :instruction code_append, :argument_tags (975 407), :additional_args (), :result_tags (947)} {:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)} {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)}) {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)} tagged_210)
Lexicase best errors: [1 0]
Lexicase best number of elite cases: 2
Lexicase best total error: 1
Lexicase best mean error: 0.5
Lexicase best size: 40
Percent parens: 0.100
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (768 659), :additional_args (), :result_tags (688)}} {:close 0, :instruction tag_exec_242} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (142), :additional_args (), :result_tags (780)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (975 407), :additional_args (), :result_tags (947)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)}} {:close 1, :instruction tagged_445} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)}} {:close 1, :instruction tagged_19} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)}} {:close 0, :instruction tag_exec_553} {:close 0, :instruction tagged_210} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}} {:close 0, :instruction tag_exec_848} {:close 1, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)}} {:close 0, :instruction tagged_601} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)}})
Zero cases best program: ({:tagged_code_macro true, :instruction code_append, :argument_tags (768 659), :additional_args (), :result_tags (688)} tag_exec_242 ({:tagged_code_macro true, :instruction code_wrap, :argument_tags (142), :additional_args (), :result_tags (780)} {:tagged_code_macro true, :instruction code_append, :argument_tags (975 407), :additional_args (), :result_tags (947)} {:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)} {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)} tagged_445) {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)} tagged_19 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)} tag_exec_553 (tagged_210 {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}) tag_exec_848 ({:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}) {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)} {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)} tagged_601 {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)})
Zero cases best partial simplification: (tag_exec_242 ({:tagged_code_macro true, :instruction code_append, :argument_tags (975 407), :additional_args (), :result_tags (947)} {:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)} {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)}) {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)} tagged_601)
Zero cases best errors: [1 0]
Zero cases best number of elite cases: 2
Zero cases best number of zero cases: 1
Zero cases best total error: 1
Zero cases best mean error: 0.5
Zero cases best size: 40
Percent parens: 0.100
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 5)
Population mean number of elite cases: 1.20
Count of perfect (error zero) individuals by case: (0 5)
Population mean number of perfect (error zero) cases: 1.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (768 659), :additional_args (), :result_tags (688)}} {:close 0, :instruction tag_exec_242} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (142), :additional_args (), :result_tags (780)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (975 407), :additional_args (), :result_tags (947)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)}} {:close 1, :instruction tagged_445} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)}} {:close 1, :instruction tagged_19} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)}} {:close 0, :instruction tag_exec_553} {:close 0, :instruction tagged_210} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}} {:close 0, :instruction tag_exec_848} {:close 1, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)}} {:close 0, :instruction tagged_601} {:close 0, :instruction {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)}} {:close 1, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)}} {:close 0, :instruction {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)}})
Best program: ({:tagged_code_macro true, :instruction code_append, :argument_tags (768 659), :additional_args (), :result_tags (688)} tag_exec_242 ({:tagged_code_macro true, :instruction code_wrap, :argument_tags (142), :additional_args (), :result_tags (780)} {:tagged_code_macro true, :instruction code_append, :argument_tags (975 407), :additional_args (), :result_tags (947)} {:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)} {:tagged_code_macro true, :instruction code_append, :argument_tags (142 16), :additional_args (), :result_tags (948)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)} tagged_445) {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)} tagged_19 {:tagged_code_macro true, :instruction code_wrap, :argument_tags (403), :additional_args (), :result_tags (112)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (540), :additional_args (), :result_tags (878)} tag_exec_553 (tagged_210 {:tagged_code_macro true, :instruction code_subst, :argument_tags (273 400 349), :additional_args (), :result_tags (336)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (924), :additional_args (), :result_tags (738)}) tag_exec_848 ({:tagged_code_macro true, :instruction code_append, :argument_tags (603 909), :additional_args (), :result_tags (346)}) {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)} {:tagged_code_macro true, :instruction code_append, :argument_tags (964 542), :additional_args (), :result_tags (269)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (82), :additional_args (), :result_tags (737)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (460), :additional_args (), :result_tags (629)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (432), :additional_args (), :result_tags (314)} tagged_601 {:tagged_code_macro true, :instruction code_append, :argument_tags (906 887), :additional_args (), :result_tags (747)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (336), :additional_args (), :result_tags (460)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (152), :additional_args (), :result_tags (830)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (532 279 984), :additional_args (), :result_tags (457)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (413 191 596), :additional_args (), :result_tags (868)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (506 873 879), :additional_args (), :result_tags (224)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (146), :additional_args (), :result_tags (97)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (688 624 794), :additional_args (), :result_tags (858)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (16 546 335), :additional_args (), :result_tags (395)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (556), :additional_args (), :result_tags (187)})
Partial simplification: (tag_exec_242 ({:tagged_code_macro true, :instruction code_wrap, :argument_tags (142), :additional_args (), :result_tags (780)} {:tagged_code_macro true, :instruction code_append, :argument_tags (975 407), :additional_args (), :result_tags (947)} {:tagged_code_macro true, :instruction code_append, :argument_tags (703 725), :additional_args (), :result_tags (66)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (93 802 33), :additional_args (), :result_tags (46)} {:tagged_code_macro true, :instruction code_subst, :argument_tags (637 717 629), :additional_args (), :result_tags (354)} tagged_445) {:tagged_code_macro true, :instruction code_wrap, :argument_tags (534), :additional_args (), :result_tags (989)} {:tagged_code_macro true, :instruction code_wrap, :argument_tags (955), :additional_args (), :result_tags (239)} tagged_19 {:tagged_code_macro true, :instruction code_subst, :argument_tags (587 169 812), :additional_args (), :result_tags (229)})
Errors: [1 0]
Total: 1
Mean: 0.5
Genome size: 36
Size: 40
Percent parens: 0.100
--- Population Statistics ---
Average total errors in population: 12.2
Median total errors in population: 15
Error averages by case: (12.2 0.0)
Error minima by case: (1 0)
Average genome size in population (length): 18.4
Average program size in population (points): 23.2
Average percent parens in population: 0.231
Minimum age in population: 5.4375
Maximum age in population: 6.5
Average age in population: 5.975
Median age in population: 5.75
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.6
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.6
Total error diversity:				 0.4
Error (vector) diversity:			 0.4
--- Run Statistics ---
Number of program evaluations used so far: 30
Number of point (instruction) evaluations so far: 1911
--- Timings ---
Current time: 1xxx milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

FAILURE
